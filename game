import tkinter as tk

# 創建一個15x15的棋盤
board = [[0 for _ in range(15)] for _ in range(15)]
def highlight_winner_buttons(row, col, direction, player):
    for k in range(5):
        if direction == "horizontal":
            buttons[row][col+k].config(text="●" if board[row][col+k] == 1 else "○", fg="red" if player == 1 else "black", state="disabled")
        elif direction == "vertical":
            buttons[row+k][col].config(text="●" if board[row+k][col] == 1 else "○", fg="red" if player == 1 else "black", state="disabled")
        elif direction == "diagonal_1":
            buttons[row+k][col+k].config(text="●" if board[row+k][col+k] == 1 else "○", fg="red" if player == 1 else "black", state="disabled")
        elif direction == "diagonal_2":
            buttons[row-k][col+k].config(text="●" if board[row-k][col+k] == 1 else "○", fg="red" if player == 1 else "black", state="disabled")

# 判斷是否有玩家獲勝
def check_winner(board, player):
    for i in range(15):
        for j in range(11):
            if all(board[i][j+k] == player for k in range(5)):
                highlight_winner_buttons(i, j, "horizontal", player)
                return True
            if all(board[j+k][i] == player for k in range(5)):
                highlight_winner_buttons(j, i, "vertical", player)
                return True
    for i in range(11):
        for j in range(11):
            if all(board[i+k][j+k] == player for k in range(5)):
                highlight_winner_buttons(i, j, "diagonal_1", player)
                return True
            if all(board[i+4-k][j+k] == player for k in range(5)):
                highlight_winner_buttons(i+4, j, "diagonal_2", player)
                return True
    return False

# 黑子為1，白子為2
current_player = 1

# 下棋
def play(row, col):
    global current_player
    if board[row][col] == 0:
        if current_player == 1:
            buttons[row][col].config(text="●", state="disabled", font=('Arial', 12), fg="black")
            board[row][col] = 1
            if check_winner(board, 1):
                label.config(text="黑子獲勝！")
                disable_all_buttons()
            else:
                current_player = 2
                label.config(text="輪到白子")
        else:
            buttons[row][col].config(text="●", state="disabled", font=('Arial', 12), fg="white")
            board[row][col] = 2
            if check_winner(board, 2):
                label.config(text="白子獲勝！")
                disable_all_buttons()
            else:
                current_player = 1
                label.config(text="輪到黑子")

# 清空棋盤並重新開始遊戲
def reset_game():
    global current_player, board
    current_player = 1
    board = [[0 for _ in range(15)] for _ in range(15)]
    for i in range(15):
        for j in range(15):
            buttons[i][j].config(text="", state="normal")

# 禁用所有按鈕
def disable_all_buttons():
    for i in range(15):
        for j in range(15):
            buttons[i][j].config(state="disabled")
            if board[i][j] == 2:
                buttons[i][j].config(text="○")

# 創建主視窗
root = tk.Tk()
root.title("雙人五子棋")

# 創建按鈕和標籤
buttons = [[0 for _ in range(15)] for _ in range(15)]
for i in range(15):
    for j in range(15):
        buttons[i][j] = tk.Button(root, width=2, height=1, command=lambda row=i, col=j: play(row, col), font=('Arial', 10))
        buttons[i][j].grid(row=i, column=j)
label = tk.Label(root, text="輪到黑子", font=('Arial', 12))
label.grid(row=15, columnspan=15)

# 新增清空按鈕
reset_button = tk.Button(root, text="重新開始", command=reset_game)
reset_button.grid(row=16, columnspan=15)

root.mainloop()

